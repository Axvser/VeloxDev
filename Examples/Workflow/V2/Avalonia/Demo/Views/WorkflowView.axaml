<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:v="clr-namespace:Demo.Views"
             xmlns:vm="clr-namespace:Demo.ViewModels"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="Demo.Views.WorkflowView"
             x:DataType="vm:WorkflowViewModel"
             PointerMoved="OnPointerMoved"
             PointerReleased="OnPointerReleased">
    <Canvas>
        <!-- ObservableCollection<IWorkflowNode> Nodes | 所有节点的视图模型存储于此 -->
        <ItemsControl ItemsSource="{Binding Nodes}" ZIndex="0">
            <!-- 容器模板，推荐显示设定尺寸 -->
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <Canvas Width="{Binding $parent[Canvas].Bounds.Width}"
                            Height="{Binding $parent[Canvas].Bounds.Height}" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <!-- 若属性作用域超出元素自身，例如此处作用域是Canvas，推荐使用 ItemContainerTheme 实现绑定 -->
            <ItemsControl.ItemContainerTheme>
                <ControlTheme TargetType="ContentPresenter" x:DataType="vm:NodeViewModel">
                    <Setter Property="Canvas.Left"
                            Value="{Binding Anchor.Left}" />
                    <Setter Property="Canvas.Top"
                            Value="{Binding Anchor.Top}" />
                    <Setter Property="Canvas.ZIndex"
                            Value="{Binding Anchor.Layer}" />
                </ControlTheme>
            </ItemsControl.ItemContainerTheme>
            <!-- 数据模板，在此处决定如何呈现每个节点视图，提示，可以使用模板选择多元化节点外观 -->
            <ItemsControl.ItemTemplate>
                <DataTemplate x:DataType="vm:NodeViewModel">
                    <v:NodeView Width="{Binding Size.Width}"
                                Height="{Binding Size.Height}"
                                IsEnabled="{Binding IsEnabled}" />
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>

        <!-- ObservableCollection<IWorkflowLink> Links | 所有已经建立的连接视图模型存储于此 -->
        <ItemsControl ItemsSource="{Binding Links}" ZIndex="-1">
            <!-- 省略 -->
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <Canvas Width="{Binding $parent[Canvas].Bounds.Width}"
                            Height="{Binding $parent[Canvas].Bounds.Height}" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <!-- 省略 -->
            <ItemsControl.ItemTemplate>
                <DataTemplate x:DataType="vm:LinkViewModel">
                    <v:BezierCurveView Width="{Binding $parent[Canvas].Bounds.Width}"
                                       Height="{Binding $parent[Canvas].Bounds.Height}"
                                       StartAnchor="{Binding Sender.Anchor}"
                                       EndAnchor="{Binding Processor.Anchor}"
                                       CanRender="{Binding IsEnabled}" />
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>

        <!-- IWorkflowLink VirtualLink | 预览曲线的视图模型 -->
        <v:BezierCurveView DataContext="{Binding VirtualLink}"
                           Width="{Binding $parent[Canvas].Bounds.Width}"
                           Height="{Binding  $parent[Canvas].Bounds.Height}"
                           StartAnchor="{Binding Sender.Anchor}"
                           EndAnchor="{Binding Processor.Anchor}"
                           CanRender="{Binding IsEnabled}" />

    </Canvas>
</UserControl>